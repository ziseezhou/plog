------
FUNCTIONS:

VERTIAL:
1. multi-language
2. theme
3. pc / phone
4. data IMAP4 backup (data clouds / security)

* a page body will be nothing before $(document).ready(function()), we do everything in init module:
  1. main page only has ready(function)
  2. ready.load(setting)
  3. ready.load(main.skeleton)
  4. ready.load(every.element)
  5. dump everything

HORIZONTAL:
LOG, TASKS, CALENDAR, CARDS, SETTINGS
* To task, if no any update info provided, the state will be suspended on that day. However, we can edit to update later.

------
MULTI-LAUNGUAGE SOLUTION:

Multi-language solution:(i18n/l10n)
Same with android:
The language is defined by a two-letter ISO 639-1 language code, optionally followed by a two letter ISO 3166-1-alpha-2 region code (preceded by lowercase "r").
detail: /resource/local_ref.htm

1. _local_load() function load the local strings and form a _PG_LOCAL hash table;
2. _()function fetch the local string from _PG_LOCAL hash table, if anything wrong, return the key as the value;
3. e.g. _("key") invoke function and return local string

above is planed to be compatible with native gettext solution in PHP.

For example: {{

include_once('config.php');
include_once('fun.php');


$_SESSION['local'] = 'en_rUS';


PG_ASSERT(_local_file_load('common'));

echo "<br/>";

echo "settings:"._('settings');

}}

------
PAGE LOADING SOLUTION:

1. main page static elements with nothing, but only like a bios;
   BIOS functions:
   1. loading user's settings; (theme, background, current content view ...)
   2. loading page.skeleton; css(topbar, notification bar, content view, ...)
   3. loading content view;
   ? how to load, active and unload script;

2. change content view
   1. disable content view and any should close function area; (maybe the toolbar...);
   2. unload content view and script events; (about scripts, we can load all at once and do not need unload);
   3. reload content view action scripts; (maybe we only need change the content view's action: contentView.action=newAction);
   4. carry contentView.action after loading finished;

KEEP IN  MIND: WE WILL DEVELOP A APPLICATION, NOT A WEBPAGE;
SO, WE ABIDE APPLICATION'S PROCEED:
1. LOAD;
2. INITILIZATION;
3. PROCESSING;
4. UNINITIAL;
5. UNLOAD;

------
DATE EXCHANGE SOLUTION:

json

------
LOADING PROGRESS:

1. first entry.
  1. loading user's settings;
  2. loading main view skeleton;
  3. loading main view css

2. loading default content view || change content view
  1. remove exist content view;
  2. related js object destruct;
  3. load new content view;
  4. load new content js object; // maybe load all js scripts at beginning.
  5. run new content js initialization, hook view actions;

3. data exchange
  1. $.get(action, params, ...)
  2. $.get().done(function{});

------
CSS FOLD STRUCTRUE
css/
   |- image-theme-####/
   |- .../
   |- theme-####.css
   |- ....css




